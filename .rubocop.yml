# .rubocop.yml
#
# Configuration for rubocop, a static code analyzer for Ruby.
#
# https://github.com/bbatsov/rubocop#configuration

AllCops:
  TargetRubyVersion: 2.3

inherit_from: .rubocop_todo.yml

# Disable Metrics/ClassLength
#
# The ISO_639 class also contains the data in a hard-coded array, which makes
# the class exceptionally long. Alternative approaches for cleanly including
# this data can be considered, but in the meantime the max length is raised
# here to accommodate the data.
Metrics/ClassLength:
  Max: 600

# Prefer `alias_method`
#
# This is debated and a nuanced issue. More infomation:
# - http://stackoverflow.com/q/4763121
# - http://blog.bigbinary.com/2012/01/08/alias-vs-alias-method.html
# - https://ernie.io/2014/10/23/in-defense-of-alias/
# - https://github.com/bbatsov/ruby-style-guide#alias-method-lexically
# - https://github.com/bbatsov/ruby-style-guide#alias-method
#
# http://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/Alias
Style/Alias:
  EnforcedStyle: prefer_alias_method

# Exclude iso-639.rb from Style/FileName
#
# This filename violates the common convention in Ruby and should be renamed
# in the future. Exclude for now in order to have this cop available for other
# files in the meantime.
Style/FileName:
  Exclude:
    - 'lib/iso-639.rb'

# Set minimum non-`%w`/`%W` word array size to 5
#
# Since this library works extensively with word arrays that sometimes include
# whitespace and punctuation, stick to a convention of using explicit arrays
# of words, and only trigger this cop when such arrays go over the 5-word
# length of the arrays in the data.
Style/WordArray:
  MinSize: 5
